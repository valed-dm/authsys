from django.urls import include
from django.urls import path
from rest_framework.routers import DefaultRouter
from rest_framework_simplejwt.views import TokenRefreshView

from .views_api import DeletedUsersListAPIView
from .views_api import LoginAPIView
from .views_api import MyPermissionsAPIView
from .views_api import PermanentDeleteUserAPIView
from .views_api import ProfileAPIView
from .views_api import RegisterAPIView
from .views_api import RestoreUserAPIView
from .views_api import SoftDeleteMeAPIView
from .views_api import SuperuserListAPIView
from .views_api import UserViewSet


app_name = "accounts_api"

# --- A router is created specifically for the admin UserViewSet ---
# This automatically generates:
#   - GET, POST /api/accounts/users/
#   - GET, PATCH /api/accounts/users/{pk}/
#   - POST /api/accounts/users/{pk}/assign-role/
router = DefaultRouter()
router.register(r"users", UserViewSet, basename="user")

# --- All other unique endpoints are defined manually ---
urlpatterns = [
    # Public endpoints for authentication
    path("register/", RegisterAPIView.as_view(), name="register_api"),
    path("login/", LoginAPIView.as_view(), name="login_api"),
    path("token/refresh/", TokenRefreshView.as_view(), name="token-refresh"),
    # Endpoints for the currently authenticated user ("me")
    path("me/", ProfileAPIView.as_view(), name="profile_api"),
    path("me/permissions/", MyPermissionsAPIView.as_view(), name="my_permissions_api"),
    path("me/delete/", SoftDeleteMeAPIView.as_view(), name="soft_delete_me_api"),
    # Specific admin-only endpoints that don't fit the standard ViewSet model
    path(
        "users/superusers/", SuperuserListAPIView.as_view(), name="superusers_list_api"
    ),
    path(
        "users/<int:pk>/delete/",
        PermanentDeleteUserAPIView.as_view(),
        name="permanent_delete_user_api",
    ),
    path("deleted/", DeletedUsersListAPIView.as_view(), name="deleted_users"),
    path(
        "deleted/<int:pk>/restore/", RestoreUserAPIView.as_view(), name="restore_user"
    ),
    # Finally, include the URLs generated by the router for the UserViewSet
    path("", include(router.urls)),
]
