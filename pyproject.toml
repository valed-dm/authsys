[project]
name = "AuthGuard"
version = "0.1.0"
description = "Production-ready Django API with JWT auth and a granular RBAC system."
authors = [
  { name = "dmvaled", email = "dmvaled@gmail.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12,<4.0"

# --- Core Dependencies ---
dependencies = [
  "django==5.2.5",
  "djangorestframework>=3.15",
  "djangorestframework-simplejwt>=5.5.1,<6.0.0",
  "drf-spectacular>=0.28.0,<0.29.0",
  "psycopg[binary]>=3.2",
  "django-redis>=6.0.0,<7.0.0",
  "pydantic>=2.11.7,<3.0.0",
  "pydantic-settings>=2.10.1,<3.0.0",
  "loguru>=0.7.3,<0.8.0",
  "PyJWT>=2.9",
  "django-allauth>=65.11.1,<66.0.0",
  "django-crispy-forms>=2.4,<3.0",
  "crispy-bootstrap5>=2025.6,<2026.0",
  "requests>=2.32.5,<3.0.0",
  "django-extensions>=4.1,<5.0",
]

# --- Development Dependencies ---
[tool.poetry.group.dev.dependencies]
ruff = "^0.12.11"
mypy = "^1.17.1"
pre-commit = "^4.3.0"
django-debug-toolbar = "^6.0.0"

# --- Testing Dependencies ---
[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-asyncio = "^1.1.0"

# --- Code Quality & Formatting Tools ---
[tool.ruff]
line-length = 88
target-version = "py312"
fix = true
unsafe-fixes = true

[tool.ruff.lint]
extend-select = ["E", "F", "W", "I", "B", "Q"]

[tool.ruff.lint.isort]
force-single-line = true
combine-as-imports = false
force-sort-within-sections = true
lines-after-imports = 2

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
